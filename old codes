import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.control.ListView;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;
import java.io.IOException;

public class Main extends Application {

    private Stage primaryStage;

    @Override
    public void start(Stage stage) {
        primaryStage = stage;

        // Create UI components
        ListView<String> listView = new ListView<>();
        listView.setPrefSize(300, 250); // Increased height for larger buttons

        Label infoLabel = new Label();

        // Define options
        listView.getItems().addAll(
            "1. DSA",
            "2. Development",
            "3. Placement",
            "4. AI/ML",
            "5. Linux Customization",
            "6. Exit"
        );

        // Set cell factory for larger buttons
        listView.setCellFactory(lv -> {
            javafx.scene.control.ListCell<String> cell = new javafx.scene.control.ListCell<>() {
                @Override
                protected void updateItem(String item, boolean empty) {
                    super.updateItem(item, empty);
                    setText(empty ? null : item);
                    setStyle("-fx-font-size: 14px; -fx-padding: 10px;"); // Larger font and padding
                }
            };
            return cell;
        });

        // Handle Enter key to open selected option
        listView.setOnKeyPressed(event -> {
            if (event.getCode().toString().equals("ENTER")) {
                String selected = listView.getSelectionModel().getSelectedItem();
                if (selected != null) {
                    handleSelection(selected, infoLabel);
                } else {
                    infoLabel.setText("Please select an option from the list.");
                }
            }
        });

        // Handle double-click to open selected option
        listView.setOnMouseClicked(event -> {
            if (event.getClickCount() == 2) {
                String selected = listView.getSelectionModel().getSelectedItem();
                if (selected != null) {
                    handleSelection(selected, infoLabel);
                } else {
                    infoLabel.setText("Please select an option from the list.");
                }
            }
        });

        // Layout with padding at the top
        VBox root = new VBox(20, listView, infoLabel);
        root.setPadding(new javafx.geometry.Insets(20, 0, 0, 0)); // Add padding at the top
        Scene scene = new Scene(root, 420, 300);

        // Apply CSS
        scene.getStylesheets().add(getClass().getResource("styles.css").toExternalForm());

        primaryStage.setTitle("Option Selector");
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    private void handleSelection(String selection, Label infoLabel) {
        new Thread(() -> {
            try {
                switch (selection) {
                    case "1. DSA":
                        openInBrowser("https://leetcode.com/problemset/");
                        openInBrowser("https://takeuforward.org/interviews/strivers-sde-sheet-top-coding-interview-problems");
                        break;
                    case "2. Development":
                        openVisualStudioCode();
                        openInBrowser("https://www.youtube.com");
                        openInBrowser("https://chatgpt.com/");
                        break;
                    case "3. Placement":
                        openInBrowser("https://www.linkedin.com/feed/");
                        openInBrowser("https://app.pod.ai/");
                        break;
                    case "4. AI/ML":
                        openInBrowser("https://drive.google.com/drive/folders/1f7zLp-VkUbswDvY9FkemMLMJzloFDxJY");
                        openInBrowser("https://colab.research.google.com/?utm_source=scs-index");
                        break;
                    case "5. Linux Customization":
                        openInBrowser("https://www.reddit.com/r/unixporn/");
                        openInBrowser("https://www.gnome-look.org/browse/");
                        break;
                    case "6. Exit":
                        System.exit(0);
                        break;
                    default:
                        throw new IllegalArgumentException("Unexpected value: " + selection);
                }
                javafx.application.Platform.runLater(() -> primaryStage.setIconified(true));
            } catch (IOException e) {
                javafx.application.Platform.runLater(() -> {
                    infoLabel.setText("Error: " + e.getMessage());
                });
                e.printStackTrace();
            }
        }).start();
    }

    private void openVisualStudioCode() throws IOException {
        String command = "code"; // Ensure 'code' command is available in the PATH
        new ProcessBuilder(command).start();
    }

    private void openInBrowser(String url) {
        try {
            new ProcessBuilder("xdg-open", url).start();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        launch(args);
    }
}


.root {
    -fx-background-color: #2c2c2c;
    -fx-text-fill: #ffffff;
}

.list-cell {
    -fx-font-size: 16px; /* Increased font size for options */
    -fx-padding: 10px; /* Increased padding for a bigger button-like appearance */
    -fx-background-color: #3a3a3a;
    -fx-text-fill: #ffffff;

}

.list-cell:hover {
    -fx-background-color: #555555;
}

.label {
    -fx-text-fill: #ffffff;
    -fx-font-size: 14px;
    -fx-background-radius: 10px; /* Rounded corners */
    -fx-border-radius: 10px; /* Rounded corners */
}
